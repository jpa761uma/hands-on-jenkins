pipeline {
    agent any

    options {
        disableConcurrentBuilds()
    }

    stages {
        stage("Build") {
            steps {
                script {
                    buildApp()
                }
            }
        }

        stage("Deploy - Dev") {
            steps {
                script {
                    deploy('dev')
                }
            }
        }
    }
}

def buildApp() {
    dir('section_4\\code\\cd_pipeline') {
        bat 'docker build -t hands-on-jenkins/myapp:%BUILD_NUMBER% .'
    }
}

def deploy(environment) {
    def containerName = ''
    def port = ''

    if (environment == 'dev') {
        containerName = 'app_dev'
        port = '8888'
    } else {
        echo 'Environment not valid'
        error 'Invalid environment'
    }

    bat "docker ps -f name=${containerName} -q | %{$_ -replace \"`,.*\",\"\"} | ForEach-Object { docker stop $_ }"
    bat "docker ps -a -f name=${containerName} -q | %{$_ -replace \"`,.*\",\"\"} | ForEach-Object { docker rm $_ }"
    bat "docker run -d -p ${port}:5000 --name ${containerName} hands-on-jenkins/myapp:%BUILD_NUMBER%"
}
